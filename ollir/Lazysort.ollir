Lazysort {

	.construct Lazysort().V {
		invokespecial(this, "<init>").V;
	}

	.method public main(a.array.String).V {
		t238.array.i32 :=.array.i32 new(array, 10.i32).array.i32;
		L.array.i32 :=.array.i32 t238.array.i32;
		i.i32 :=.i32 0.i32;
		While6:
			t239.i32 :=.i32 arraylength(L.array.i32).i32;
			if (i.i32 <.bool t239.i32) goto Loop6;
			goto EndWhile6;
		Loop6:
			t240.i32 :=.i32 arraylength(L.array.i32).i32;
			t241.i32 :=.i32 t240.i32 -.i32 i.i32;
			L[i.i32].i32 :=.i32 t241.i32;
			t242.i32 :=.i32 i.i32 +.i32 1.i32;
			i.i32 :=.i32 t242.i32;
			goto While6;
		EndWhile6:
		t243.Lazysort :=.Lazysort new(Lazysort).Lazysort;
		invokespecial(t243.Lazysort,"<init>").V;
		q.Lazysort :=.Lazysort t243.Lazysort;
		invokevirtual(q.Lazysort, "quicksort", L.array.i32).bool;
		t244.bool :=.bool invokevirtual(q.Lazysort, "printL", L.array.i32).bool;
		d.bool :=.bool t244.bool;
		ret.V;
	}

	.method public quicksort(L.array.i32).bool {
		t245.i32 :=.i32 invokestatic(MathUtils, "random", 0.i32, 5.i32).i32;
		rand.i32 :=.i32 t245.i32;
		if (rand.i32 <.bool 4.i32) goto True11;
			lazy.bool :=.bool false.bool;
			goto Endif11;
		True11:
			invokevirtual(this, "beLazy", $0.L.array.i32).bool;
			lazy.bool :=.bool true.bool;
		Endif11:
		if (lazy.bool &&.bool lazy.bool) goto True12;
			t247.i32 :=.i32 arraylength($0.L.array.i32).i32;
			t248.i32 :=.i32 t247.i32 -.i32 1.i32;
			t249.bool :=.bool invokevirtual(this, "quicksort", $0.L.array.i32, 0.i32, t248.i32).bool;
			lazy.bool :=.bool t249.bool;
			goto Endif12;
		True12:
			t246.bool :=.bool lazy.bool !.bool lazy.bool;
			lazy.bool :=.bool t246.bool;
		Endif12:
		ret.bool lazy.bool;
	}

	.method public beLazy(L.array.i32).bool {
		t250.i32 :=.i32 arraylength($0.L.array.i32).i32;
		_allowedNameL.i32 :=.i32 t250.i32;
		$allowedNameI.i32 :=.i32 0.i32;
		While7:
			t251.i32 :=.i32 _allowedNameL.i32 /.i32 2.i32;
			if ($allowedNameI.i32 <.bool t251.i32) goto Loop7;
			goto EndWhile7;
		Loop7:
			t252.i32 :=.i32 invokestatic(MathUtils, "random", 0.i32, 10.i32).i32;
			$0.L[$allowedNameI.i32].i32 :=.i32 t252.i32;
			t253.i32 :=.i32 $allowedNameI.i32 +.i32 1.i32;
			$allowedNameI.i32 :=.i32 t253.i32;
			goto While7;
		EndWhile7:
		While8:
			if ($allowedNameI.i32 <.bool _allowedNameL.i32) goto Loop8;
			goto EndWhile8;
		Loop8:
			t254.i32 :=.i32 invokestatic(MathUtils, "random", 0.i32, 10.i32).i32;
			rand.i32 :=.i32 t254.i32;
			t255.i32 :=.i32 rand.i32 +.i32 1.i32;
			$0.L[$allowedNameI.i32].i32 :=.i32 t255.i32;
			t256.i32 :=.i32 $allowedNameI.i32 +.i32 1.i32;
			$allowedNameI.i32 :=.i32 t256.i32;
			goto While8;
		EndWhile8:
		ret.bool true.bool;
	}
}

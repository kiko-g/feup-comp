WhileAndIF {

	.construct WhileAndIF().V {
		invokespecial(this, "<init>").V;
	}

	.method public main(args.array.String).V {
		a.i32 :=.i32 20.i32;
		b.i32 :=.i32 10.i32;
		t509.array.i32 :=.array.i32 new(array, 10.i32).array.i32;
		d.array.i32 :=.array.i32 t509.array.i32;
		if (a.i32 <.bool b.i32) goto True35;
			t511.i32 :=.i32 b.i32 -.i32 1.i32;
			c.i32 :=.i32 t511.i32;
			goto Endif35;
		True35:
			t510.i32 :=.i32 a.i32 -.i32 1.i32;
			c.i32 :=.i32 t510.i32;
		Endif35:
		While15:
			t512.i32 :=.i32 0.i32 -.i32 1.i32;
			if (t512.i32 <.bool c.i32) goto Loop15;
			goto EndWhile15;
		Loop15:
			t513.i32 :=.i32 a.i32 -.i32 b.i32;
			d[c.i32].i32 :=.i32 t513.i32;
			t514.i32 :=.i32 c.i32 -.i32 1.i32;
			c.i32 :=.i32 t514.i32;
			t515.i32 :=.i32 a.i32 -.i32 1.i32;
			a.i32 :=.i32 t515.i32;
			t516.i32 :=.i32 b.i32 -.i32 1.i32;
			b.i32 :=.i32 t516.i32;
			goto While15;
		EndWhile15:
		c.i32 :=.i32 0.i32;
		While16:
			t517.i32 :=.i32 arraylength(d.array.i32).i32;
			if (c.i32 <.bool t517.i32) goto Loop16;
			goto EndWhile16;
		Loop16:
			t518.i32 :=.i32 d[c.i32].i32;
			invokestatic(io, "println", t518.i32).V;
			t519.i32 :=.i32 c.i32 +.i32 1.i32;
			c.i32 :=.i32 t519.i32;
			goto While16;
		EndWhile16:
		ret.V;
	}
}
